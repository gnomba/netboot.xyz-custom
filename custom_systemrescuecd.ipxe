#!ipxe
###
### netboot.xyz-custom menu SystemRescueCD
###

clear custom_choice_systemrescuecd
set vNAME systemrescuecd
set vSYSTEMRESCUECD true

goto ${menu} ||

:custom_menu_${vNAME}
menu SystemRescueCD netboot
item --gap SystemRescueCD
item systemrescuecd6 ${space} 6.0.7 (Arch-based)
item systemrescuecd6_iso ${space} 6.0.7 (ISO)
item systemrescuecd5 ${space} 5.3.2 (Gentoo-based)
item systemrescuecd5_iso ${space} 5.3.2 (ISO)
item backtomenu <- Back to menu
choose custom_choice_${vNAME}
echo ${cls}
goto ${custom_choice_systemrescuecd} || goto debug_${vNAME}

:systemrescuecd6
set vRELEASE 6.0.7
set vARCH x86_64
set vURL http://${vCUSTOM_MIRROR}/sysrcd6
set vKERNEL ${vURL}/sysresccd/boot/${vARCH}/vmlinuz
set vINITRD ${vURL}/sysresccd/boot/${vARCH}/sysresccd.img
set vOPTS vmlinuz initrd=sysresccd.img archiso_http_srv=${vURL}/ archisobasedir=sysresccd checksum=y ip=dhcp net.ifnames=0 ${console}
goto os_install || goto debug_${vNAME}

:systemrescuecd5
set vRELEASE 5.3.2
set vARCH amd64
set vURL http://${vCUSTOM_MIRROR}/sysrcd5
set vKERNEL ${vURL}/rescue64
set vINITRD ${vURL}/initram.igz
set vOPTS rescue64 setkmap=us dodhcp netboot=${vURL}/sysrcd.dat initrd=initram.igz
goto os_install || goto debug_${vNAME}

:systemrescuecd6_iso

goto iso_boot || goto debug_${vNAME}

:systemrescuecd6_iso

goto iso_boot || goto debug_${vNAME}

:debug_systemrescuecd
echo +-------+
echo | DEBUG |
echo +-------+
echo custom_choice_${vNAME} = ${custom_choice_systemrescuecd}
echo vMIRROR = ${vMIRROR}
echo vCUSTOM_MIRROR = ${vCUSTOM_MIRROR}
echo vNAME = ${vNAME}
echo vSYSTEMRESCUECD = ${vSYSTEMRESCUECD}
echo vRELEASE = ${vRELEASE} 
echo vARCH = ${vARCH}
echo vURL = ${vURL}
echo vKERNEL = ${vKERNEL}
echo vINITRD = ${vINITRD}
echo vOPTS = ${vOPTS}
echo =========
goto error_${vNAME}

:error_systemrescuecd
echo +-------+
echo | ERROR |
echo +-------+
echo Error occured, press any key to return to menu ...
prompt
chain custom_${vNAME}.ipxe

:backtomenu
chain custom.ipxe || goto error_${vNAME}

:os_install
echo Booting ${vNAME} ${vRELEASE} ${vARCH}
echo =================
imgfree
imgtrust --allow
kernel ${vKERNEL} ${vOPTS} || goto debug_${vNAME}
initrd ${vINITRD}  || goto debug_${vNAME}
boot || goto debug_${vNAME}goto debug_${vNAME}

:iso_boot
echo Booting ${vNAME} ${vRELEASE} ${vARCH}
echo =================
imgfree
imgtrust --allow
kernel ${vKERNEL} ${vOPTS} || goto debug_${vNAME}
initrd ${vINITRD} || goto debug_${vNAME}
boot || goto debug_${vNAME}
